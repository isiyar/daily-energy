openapi: 3.0.0
info:
  title: Daily Energy API
  description: API для управления энергетическими данными пользователей
  version: 1.0.0
  contact:
    name: Daily Energy Team
servers:
  - url: http://localhost/
    description: Локальный сервер разработки
  - url: https://test-srvr.ru/
    description: Продакшн сервер

tags:
  - name: users
    description: Операции с пользователями
  - name: plans
    description: Операции с планами питания и активности
  - name: actions
    description: Операции с действиями пользователей
  - name: weight-history
    description: История изменения веса пользователей
  - name: ai
    description: Взаимодействие с ИИ

paths:
  /api/users:
    post:
      summary: Создать нового пользователя
      tags: [ users ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /api/users/{utgid}:
    get:
      summary: Получить пользователя по ID
      tags: [ users ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Обновить данные пользователя
      tags: [ users ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Пользователь обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Удалить пользователя
      tags: [ users ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Пользователь удален
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /api/users/{utgid}/weight-history:
    get:
      summary: Получить историю веса пользователя
      tags: [ weight-history ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserWeightHistoryResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Добавить запись веса пользователя
      tags: [ weight-history ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWeightHistoryRequest'
      responses:
        '201':
          description: Запись добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWeightHistoryResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /api/users/{utgid}/plans:
    get:
      summary: Получить список планов
      tags: [ plans ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: start_at
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: finish_at
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [ Activity, Food ]
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Создать новый план
      tags: [ plans ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
      responses:
        '201':
          description: План создан
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/users/{utgid}/actions:
    get:
      summary: Получить список действий
      tags: [ actions ]
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: start_at
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: finish_at
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [ Activity, Food ]
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      parameters:
        - name: utgid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      summary: Создать новое действие
      tags: [ actions ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequest'
      responses:
        '201':
          description: Действие создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/actions/{id}:
    get:
      summary: Получить действие по ID
      tags: [ actions ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: action not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



  /api/ai/calories:
    post:
      summary: Рассчитать калорийность блюда
      tags: [ ai ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaloriesRequest'
      responses:
        '200':
          description: Калории рассчитаны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaloriesResponse'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    UserResponse:
      type: object
      properties:
        utgid:
          type: integer
          format: int64
        gender:
          type: string
          enum: [ Male, Female ]
        date_of_birth:
          type: integer
          format: int64
        weight:
          type: integer
        height:
          type: integer
        goal:
          type: string
          enum: [ LoseWeight, Maintain, GainMuscleMass ]
        physical_activity:
          type: string
          enum: [ Low, Medium, High ]
        name:
          type: string

    UserCreate:
      type: object
      required:
        - utgid
        - gender
        - date_of_birth
        - weight
        - height
        - goal
        - physical_activity
        - name
      properties:
        utgid:
          type: integer
          format: int64
        gender:
          type: string
          enum: [ Male, Female ]
        date_of_birth:
          type: integer
          format: int64
        weight:
          type: integer
        height:
          type: integer
        goal:
          type: string
          enum: [ LoseWeight, Maintain, GainMuscleMass ]
        physical_activity:
          type: string
          enum: [ Low, Medium, High ]
        name:
          type: string

    UserRequest:
      type: object
      required:
        - name
        - gender
        - date_of_birth
        - weight
        - height
        - goal
        - physical_activity
      properties:
        weight:
          type: integer
        height:
          type: integer
        gender:
          type: string
          enum: [ Male, Female ]
        date_of_birth:
          type: integer
          format: int64
        goal:
          type: string
          enum: [ LoseWeight, Maintain, GainMuscleMass ]
        physical_activity:
          type: string
          enum: [ Low, Medium, High ]
        name:
          type: string

    UserWeightHistoryResponse:
      type: object
      properties:
        utgid:
          type: integer
          format: int64
        date:
          type: integer
          format: int64
        weight:
          type: integer
        height:
          type: integer

    UserWeightHistoryRequest:
      type: object
      required:
        - date
        - weight
        - height
      properties:
        date:
          type: integer
          format: int64
        weight:
          type: integer
        height:
          type: integer

    PlanResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        utgid:
          type: integer
          format: int64
        date:
          type: integer
          format: i nt64
        calories_to_consume:
          type: integer
        calories_to_burn:
          type: integer
        recommendation:
          type: string
        type:
          type: string
          enum: [ Food, Activity ]

    PlanRequest:
      type: object
      required:
        - date
      properties:
        date:
          type: integer
          format: int64

    ActionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        utgid:
          type: integer
          format: int64
        date:
          type: integer
          format: int64
        activity_name:
          type: string
        calories:
          type: integer
        type:
          type: string
          enum: [ Food, Activity ]

    ActionRequest:
      type: object
      required:
        - date
        - activity_name
        - calories
        - type
      properties:
        date:
          type: integer
          format: int64
        activity_name:
          type: string
        calories:
          type: integer
        type:
          type: string
          enum: [ Food, Activity ]

    CaloriesRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string

    CaloriesResponse:
      type: object
      required:
        - calories
      properties:
        calories:
          type: integer

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        details:
          type: string
